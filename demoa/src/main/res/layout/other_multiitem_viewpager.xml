<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright (C) 2015-2016 S.Violet
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You my obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~
  ~ Project GitHub: https://github.com/shepherdviolet/turquoise
  ~ Email: shepherdviolet@163.com
  -->

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <!--
    ~ 说明:
    ~ ViewPager一般只显示一个Item(除非复写了PagerAdapter.getPageWidth方法), 利用android:clipChildren="false"参数,
    ~ 使得ViewPager控件范围以外的部分也能够被绘制出来, 在ViewPager外面套一层容器Layout, 容器的尺寸就是多ItemViewPager
    ~ 想要的尺寸, 而ViewPager本身的尺寸其实就变成一个Item的尺寸. 为了使得ViewPager外, 容器内的触摸事件能够传递给
    ~ ViewPager, 还需要手动将触摸事件传递给ViewPager.
    -->

    <!--ViewPager外面套一层容器,比ViewPager大,设置android:clipChildren="false".必要时关闭硬件加速:android:layerType="software".-->
    <LinearLayout
        android:id="@+id/other_multiitem_viewpager_container"
        android:layout_width="match_parent"
        android:layout_height="200dp"
        android:orientation="vertical"
        android:layout_gravity="center"
        android:gravity="center"
        android:clipChildren="false">

        <!--ViewPager的尺寸实际是中间Item的尺寸,设置android:clipChildren="false".-->
        <android.support.v4.view.ViewPager
            android:id="@+id/other_multiitem_viewpager_viewpager"
            android:layout_width="70dp"
            android:layout_height="100dp"
            android:gravity="center"
            android:clipChildren="false"/>

    </LinearLayout>

</LinearLayout>