android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId "sviolet.demoaimageloader"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode Integer.valueOf(version_projectVersionCode)
        versionName version_projectVersionName

        //true:多dex允许,突破类65535的限制
        multiDexEnabled false

        ndk {
            //使得APK中只包含指定版本的so库
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
    }

    buildTypes {
        release {
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            //调试
            debuggable false
            //移除无用resource
            shrinkResources false
            //proguard配置文件proguard-rules.pro
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            //自定义参数, 程序中BuildConfig._DEBUG获得
            buildConfigField "boolean", "_DEBUG", "false"
        }
        debug {
            //混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled false
            //调试
            debuggable true
            //移除无用resource
            shrinkResources false
            //proguard配置文件proguard-rules.pro
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            //自定义参数, 程序中BuildConfig._DEBUG获得
            buildConfigField "boolean", "_DEBUG", "true"
        }
    }

    productFlavors {
    }

    sourceSets {
        main {
            //指定JNI的so库路径
            jniLibs.srcDirs = ['libs']
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')//这个配置会自动在混淆时引入Jar包, 不要在proguard-rules.pro中配置-libraryjars, 否则会报错!
    compile project(':turquoise') { group 'com.github.shepherdviolet.turquoise'; version upload_mavenVersion }//指定groupId和version, artifactId为project名
    compile project(':turquoise-imageloader') { group 'com.github.shepherdviolet.turquoise'; version upload_mavenVersion }//指定groupId和version, artifactId为project名
}
