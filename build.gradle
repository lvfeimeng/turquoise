
//构建脚本通用配置////////////////////////////////////////////////////////////////////////////////////

buildscript {

    //装载其他配置文件
    ext {
        //解析配置文件
        def customProperties = new Properties()
        file("gradle-local.properties").withInputStream { stream -> customProperties.load(stream) }
//        file("gradle-other.properties").withInputStream { stream -> customProperties.load(stream) }

        //将配置放入公共配置, 在gradle中可直接引用
        customProperties.each {
            rootProject.extensions.add("$it.key",it.value)
        }

        //默认值, 判断配置项是否存在, 需要使用rootProject.extensions.findByName('name'). 而确保配置项存在的情况下, 可直接引用
        //upload_mavenVersion = rootProject.extensions.findByName('upload_mavenVersion') != null ? upload_mavenVersion : version_projectVersionName + '-SNAPSHOT'
    }

    //构建脚本依赖仓库
    repositories {
        if (rootProject.extensions.findByName('repository_localRepositoryPath') != null) {
            maven {url repository_localRepositoryPath}
        }
        jcenter()
        maven { url 'https://jitpack.io' }
        google()
//        maven { url 'https://github.com/shepherdviolet/alternate-maven-repository/raw/master/repository' }//custom repo
    }

    //构建脚本依赖
    dependencies {
        //common
        classpath 'com.android.tools.build:gradle:3.0.0-beta3'//安卓构建插件
//        classpath 'com.android.tools.build:gradle:2.3.0'//安卓构建插件
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$version_kotlinVersion"//kotlin
        classpath "com.github.shepherdviolet:gradle-turquoise:$version_gradleTurquoiseVersion"//gradle-turquoise plugin
    }

}

//全部工程通用配置////////////////////////////////////////////////////////////////////////////////////

allprojects {
    //工程依赖仓库
    repositories {
        if (rootProject.extensions.findByName('repository_localRepositoryPath') != null) {
            maven {url repository_localRepositoryPath}
        }
        jcenter()
        maven { url 'https://jitpack.io' }
        google()
//        mavenLocal()//本地仓库
//        maven{ url 'file:C:/m2repository/repository'}//本地仓库:指定路径
//        maven { url 'https://github.com/shepherdviolet/alternate-maven-repository/raw/master/repository' }//custom repo
    }
}

//库工程通用配置////////////////////////////////////////////////////////////////////////////////////

configure(subprojects.findAll { it.name.startsWith('turquoise') }) {
    apply plugin: 'com.android.library'
    apply plugin: 'kotlin-android'

    android {
        compileSdkVersion 25
        buildToolsVersion '25.0.2'

        defaultConfig {
            minSdkVersion 14
            targetSdkVersion 25
            versionCode Integer.valueOf(version_projectVersionCode)
            versionName version_projectVersionName
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$version_kotlinVersion"
    }

}

//DEMO工程通用配置////////////////////////////////////////////////////////////////////////////////////

configure(subprojects.findAll { it.name.startsWith('demo') }) {
    apply plugin: 'com.android.application'
    apply plugin: 'kotlin-android'

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$version_kotlinVersion"
    }

}

//其他////////////////////////////////////////////////////////////////////////////////////

//上传
apply from: 'gradle/build-upload.gradle'
//工具
apply from: 'gradle/build-tools.gradle'
//gradle-turquoise插件
apply from: 'gradle/build-turquoise.gradle'