
//构建脚本通用配置////////////////////////////////////////////////////////////////////////////////////

buildscript {

    //装载gradle-local.properties
    ext {
        gradleLocalProperties = new Properties()
        def gradleLocalFile = file("gradle-local.properties")
        if (gradleLocalFile.exists()) {
            gradleLocalFile.withInputStream { stream -> gradleLocalProperties.load(stream) }
        }

        upload_mvn_version = gradleLocalProperties.upload_mvn_version != null ? gradleLocalProperties.upload_mvn_version : library_version_name + '-SNAPSHOT'
        upload_mvn_local_repo = gradleLocalProperties.upload_mvn_local_repo != null  ? gradleLocalProperties.upload_mvn_local_repo : rootProject.rootDir.absolutePath + '/release'
        plugin_mvn_local_repo = gradleLocalProperties.plugin_mvn_local_repo
        plugin_name_gradle_turquoise = gradleLocalProperties.plugin_name_gradle_turquoise
    }

    //构建脚本依赖仓库
    repositories {
        //plugin
        if (gradleLocalProperties.plugin_mvn_local_repo != null) { maven {url gradleLocalProperties.plugin_mvn_local_repo} }//local plugin repo

        //common
        jcenter()//jcenter
//        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public'}//阿里云仓库
    }

    //构建脚本依赖
    dependencies {
        //common
        classpath 'com.android.tools.build:gradle:3.0.0-alpha1'//安卓构建插件
//        classpath 'com.android.tools.build:gradle:2.3.0'//安卓构建插件

        //plugin
        if (gradleLocalProperties.plugin_name_gradle_turquoise != null) { classpath gradleLocalProperties.plugin_name_gradle_turquoise }//gradle-turquoise plugin
    }

}

//全部工程通用配置////////////////////////////////////////////////////////////////////////////////////

allprojects {
    //工程依赖仓库
    repositories {
//        mavenLocal()//本地仓库
//        maven{ url 'file:C:/m2repository/repository'}//本地仓库:指定路径
        jcenter()//jcenter
//        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public'}//阿里云仓库
    }
}

//库工程通用配置////////////////////////////////////////////////////////////////////////////////////

configure(subprojects.findAll { it.name.startsWith('turquoise') }) {
    apply plugin: 'com.android.library'

    android {
        compileSdkVersion 25
        buildToolsVersion '25.0.2'

        defaultConfig {
            minSdkVersion 14
            targetSdkVersion 25
            versionCode Integer.valueOf(library_version_code)
            versionName library_version_name
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
    }
}

//DEMO工程通用配置////////////////////////////////////////////////////////////////////////////////////

configure(subprojects.findAll { it.name.startsWith('demo') }) {
    apply plugin: 'com.android.application'
}

//其他////////////////////////////////////////////////////////////////////////////////////

//上传本地仓库
apply from: 'build-upload.gradle'
//工具任务
apply from: 'build-tools.gradle'

//应用gradle-turquoise插件
if (plugin_name_gradle_turquoise != null) {
    apply plugin: 'gradle-turquoise'
    turquoise{
        printCachePathOfDependenciesFilter = ['compile']
    }
}